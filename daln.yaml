ac_daln:


  input_number:

    dalnac_temp:
      name: "Целевая температура DalnAC"
      min: 10
      max: 35


  input_text:

    dalnac_hvac:
      name: "Режим DalnAC"

    dalnac_fan:
      name: "Fan DalnAC"

    dalnac_swing:
      name: "Swing DalnAC"

    dalnac_preset:
      name: "Preset DalnAC"


  input_boolean:
    dalnac_xfan:
      name: "XFan DalnAC"


  input_select:
    dalnac_myswing:
      name: mySwing DalnAC
      options:
      - "none"
      - "middleup"
      - "middle"
      - "middledown"
      initial: "none"


  template:

  - sensor:

    - name: "dalnac_fan"
      unique_id: dalnac_fan
      state: >-
        {% if is_state_attr('climate.dalnac_gree', 'fan_mode', 'auto') %}
          Авто
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'low') %}
          Низкий
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'medium') %}
          Средний
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'high') %}
          Высокий
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'focus') %}
          Турбо
        {% else %}
          Неопределено
        {% endif %}
      icon: >-
        {% if is_state_attr('climate.dalnac_gree', 'fan_mode', 'auto') %}
          mdi:fan-auto
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'low') %}
          mdi:fan-speed-1
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'medium') %}
          mdi:fan-speed-2
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'high') %}
          mdi:fan-speed-3
        {% elif is_state_attr('climate.dalnac_gree', 'fan_mode', 'focus') %}
          mdi:fan-alert
        {% else %}
          mdi:fan
        {% endif %}    

    - name: "dalnac_swing"
      unique_id: dalnac_swing
      state: >-
        {% if is_state_attr('climate.dalnac_gree', 'swing_mode', 'off') %}
          Отключено
        {% elif is_state_attr('climate.dalnac_gree', 'swing_mode', 'vertical') %}
          Включено
        {% elif is_state_attr('climate.dalnac_gree', 'swing_mode', 'both') %}
          Вниз
        {% elif is_state_attr('climate.dalnac_gree', 'swing_mode', 'horizontal') %}
          Вверх
        {% else %}
          Неопределено
        {% endif %}
      icon: >-
        {% if is_state_attr('climate.dalnac_gree', 'swing_mode', 'off') %}
          mdi:share-off-outline
        {% elif is_state_attr('climate.dalnac_gree', 'swing_mode', 'vertical') %}
          mdi:arrow-up-down
        {% elif is_state_attr('climate.dalnac_gree', 'swing_mode', 'both') %}
          mdi:archive-arrow-down-outline
        {% elif is_state_attr('climate.dalnac_gree', 'swing_mode', 'horizontal') %}
          mdi:format-horizontal-align-left
        {% else %}
          mdi:car-defrost-rear
        {% endif %} 

    - name: "dalnac_preset"
      unique_id: dalnac_preset
      state: >-
        {% if is_state_attr('climate.dalnac_gree', 'preset_mode', 'activity') %}
          Активность
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'away') %}
          Не дома
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'boost') %}
          Турбо
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'comfort') %}
          Комфорт
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'eco') %}
          Эко
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'home') %}
          Дома
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'none') %}
          Нет
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'sleep') %}
          Сон
        {% else %}
          Неопределено
        {% endif %}
      icon: >-
        {% if is_state_attr('climate.dalnac_gree', 'preset_mode', 'activity') %}
          mdi:run
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'away') %}
          mdi:home-off-outline
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'boost') %}
          mdi:car-turbocharger
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'comfort') %}
          mdi:beach
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'eco') %}
          mdi:sprout
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'home') %}
          mdi:home-account
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'none') %}
          mdi:border-none-variant
        {% elif is_state_attr('climate.dalnac_gree', 'preset_mode', 'sleep') %}
          mdi:bed-clock
        {% else %}
          mdi:location-enter
        {% endif %} 


  automation:

  - id: sync_climate_dalnac_hvac
    alias: Синхронизация режима кондиционера в дальней комнате
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
    condition:
      condition: not
      conditions:
      - condition: state
        entity_id: climate.dalnac_gree
        state: "unavailable"
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.dalnac_hvac
      data:
        value: "{{ states('climate.dalnac_gree') }}"

  - id: sync_climate_dalnac_fan
    alias: Синхронизация вентилятора кондиционера в дальней комнате
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: fan_mode
    condition:
      condition: not
      conditions:
      - condition: state
        entity_id: climate.dalnac_gree
        attribute: fan_mode
        state: 'on'
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.dalnac_fan
      data:
        value: "{{ state_attr('climate.dalnac_gree','fan_mode') }}"

  - id: sync_climate_dalnac_swing
    alias: Синхронизация жалюзи кондиционера в дальней комнате
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: swing_mode
    action:
    - choose:
      - conditions:
          not:
          - condition: state
            entity_id: climate.dalnac_gree
            attribute: swing_mode
            state: 'off'
        sequence:
        - service: input_text.set_value
          target:
            entity_id: input_text.dalnac_swing
          data:
            value: "{{ state_attr('climate.dalnac_gree','swing_mode') }}"
        - service: input_select.select_option
          target:
            entity_id: input_select.dalnac_myswing
          data:
            option: "none"
      - conditions:
        - condition: state
          entity_id: climate.dalnac_gree
          attribute: swing_mode
          state: 'off'
        sequence:
        - service: input_text.set_value
          target:
            entity_id: input_text.dalnac_swing
          data:
            value: "{{ state_attr('climate.dalnac_gree','swing_mode') }}"




  - id: sync_climate_dalnac_preset
    alias: Синхронизация предустановок кондиционера в дальней комнате
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: preset_mode
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.dalnac_preset
      data:
        value: "{{ state_attr('climate.dalnac_gree','preset_mode') }}"

  - id: sync_climate_dalnac_temp
    alias: Синхронизация температуры кондиционера в дальней комнате
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: temperature
    condition:
      condition: not
      conditions:
      - condition: state
        entity_id: climate.dalnac_gree
        attribute: temperature
        state: 0
    action:
    - service: input_number.set_value
      target:
        entity_id: input_number.dalnac_temp
      data:
        value: "{{ state_attr('climate.dalnac_gree','temperature') }}"

  - id: sync_climate_dalnac_irblaster
    alias: Синхронизация команд пульта кондиционера в дальней комнате
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: climate.dalnac_gree
      from: 'unavailable'
    action:
    - service: esphome.dalnac_set_data
      data:
        hvac: "{{ states('input_text.dalnac_hvac') }}"
        temp: "{{ states('input_number.dalnac_temp') }}"
        fan: "{{ states('input_text.dalnac_fan') }}"
        swing: "{{ states('input_text.dalnac_swing') }}"
        light: "{{ false if is_state('switch.dalnac_dysplay', 'off') else true }}"
        preset: "{{ states('input_text.dalnac_preset') }}"

  - id: dalnac_set_mydata
    alias: Отправка моих данных на кондиционер
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: input_boolean.dalnac_xfan
      to:
    - platform: state
      entity_id: input_select.dalnac_myswing
      not_to: "none"
    action:
    - service: esphome.dalnac_set_mydata
      data:
        myswing: "{{ states('input_select.dalnac_myswing') }}"
        xfan: "{{ states('input_boolean.dalnac_xfan') }}"
