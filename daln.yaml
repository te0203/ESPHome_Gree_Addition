ac_daln:


  input_number:

    status_climate_dalnac_temp:
      name: "Целевая температура DalnAC"
      min: 10
      max: 35


  input_text:

    status_climate_dalnac_hvac:
      name: "Режим DalnAC"

    status_climate_dalnac_fan:
      name: "Fan DalnAC"

    status_climate_dalnac_swing:
      name: "Swing DalnAC"

    status_climate_dalnac_preset:
      name: "Preset  DalnAC"

  sensor:

  - platform: template
    sensors:
      status_climate_dalnac_hvac:
        friendly_name: "Режим DalnAC"
        value_template: >-
          {% if is_state('input_text.status_climate_dalnac_hvac', 'off') %}
            Выключен
          {% elif is_state('input_text.status_climate_dalnac_hvac', 'heat_cool') %}
            Авто
          {% elif is_state('input_text.status_climate_dalnac_hvac', 'cool') %}
            Охлаждение
          {% elif is_state('input_text.status_climate_dalnac_hvac', 'heat') %}
            Обогрев
          {% elif is_state('input_text.status_climate_dalnac_hvac', 'dry') %}
            Осушение
          {% elif is_state('input_text.status_climate_dalnac_hvac', 'fan_only') %}
            Вентилятор
          {% else %}
            Неопределено
          {% endif %}

      status_climate_dalnac_fan:
        friendly_name: "Fan DalnAC"
        value_template: >-
          {% if is_state('input_text.status_climate_dalnac_fan', 'auto') %}
            Авто
          {% elif is_state('input_text.status_climate_dalnac_fan', 'low') %}
            Низкий
          {% elif is_state('input_text.status_climate_dalnac_fan', 'medium') %}
            Средний
          {% elif is_state('input_text.status_climate_dalnac_fan', 'high') %}
            Высокий
          {% elif is_state('input_text.status_climate_dalnac_fan', 'focus') %}
            Турбо
          {% else %}
            Неопределено
          {% endif %}    

      status_climate_dalnac_swing:
        friendly_name: "Swing DalnAC"
        value_template: >-
          {% if is_state('input_text.status_climate_dalnac_swing', 'off') %}
            Отключено
          {% elif is_state('input_text.status_climate_dalnac_swing', 'vertical') %}
            Включено
          {% elif is_state('input_text.status_climate_dalnac_swing', 'both') %}
            Вниз
          {% elif is_state('input_text.status_climate_dalnac_swing', 'horizontal') %}
            Вверх
          {% else %}
            Неопределено
          {% endif %}
      

      status_climate_dalnac_preset:
        friendly_name: "Профиль DalnAC"
        value_template: >-
          {% if is_state('input_text.status_climate_dalnac_preset', 'activity') %}
            Активность
          {% elif is_state('input_text.status_climate_dalnac_preset', 'away') %}
            Не дома
          {% elif is_state('input_text.status_climate_dalnac_preset', 'boost') %}
            Турбо
          {% elif is_state('input_text.status_climate_dalnac_preset', 'comfort') %}
            Комфорт
          {% elif is_state('input_text.status_climate_dalnac_preset', 'eco') %}
            Эко
          {% elif is_state('input_text.status_climate_dalnac_preset', 'home') %}
            Дома
          {% elif is_state('input_text.status_climate_dalnac_preset', 'none') %}
            Нет
          {% elif is_state('input_text.status_climate_dalnac_preset', 'sleep') %}
            Сон
          {% else %}
            Неопределено
          {% endif %}
      

      status_climate_dalnac_temp:
        friendly_name: "Температура DalnAC"
        value_template: "{{ states('input_number.status_climate_dalnac_temp') }}"



  automation:
  - id: sync_climate_dalnac_hvac
    alias: Sync Climate DalnAc HVAC mode
    initial_state: 'on'
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
    condition:
      condition: not
      conditions:
      - condition: state
        entity_id: climate.dalnac_gree
        state: "unavailable"
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.status_climate_dalnac_hvac
      data:
        value: "{{ states('climate.dalnac_gree') }}"


  - id: sync_climate_dalnac_fan
    alias: Sync Climate DalnAc Fan
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: fan_mode
    condition:
      condition: not
      conditions:
      - condition: state
        entity_id: climate.dalnac_gree
        attribute: fan_mode
        state: 'on'
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.status_climate_dalnac_fan
      data:
        value: "{{ state_attr('climate.dalnac_gree','fan_mode') }}"


  - id: sync_climate_dalnac_swing
    alias: Sync Climate DalnAc Swing
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: swing_mode
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.status_climate_dalnac_swing
      data:
        value: "{{ state_attr('climate.dalnac_gree','swing_mode') }}"


  - id: sync_climate_dalnac_preset
    alias: Sync Climate DalnAc Preset
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: preset_mode
    action:
    - service: input_text.set_value
      target:
        entity_id: input_text.status_climate_dalnac_preset
      data:
        value: "{{ state_attr('climate.dalnac_gree','preset_mode') }}"


  - id: sync_climate_dalnac_temp
    alias: Sync Climate DalnAc Temp
    trigger:
    - platform: state
      entity_id: climate.dalnac_gree
      attribute: temperature
    condition:
      condition: not
      conditions:
      - condition: state
        entity_id: climate.dalnac_gree
        attribute: temperature
        state: 0
    action:
    - service: input_number.set_value
      target:
        entity_id: input_number.status_climate_dalnac_temp
      data:
        value: "{{ state_attr('climate.dalnac_gree','temperature') }}"



  - id: sync_climate_dalnac_irblaster
    alias: Sync Climate DalnAc back to IR Blaster
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: climate.dalnac_gree
      from: 'unavailable'
    action:
    - service: esphome.dalnac_set_data
      data:
        hvac: "{{ states('input_text.status_climate_dalnac_hvac') }}"
        temp: "{{ states('input_number.status_climate_dalnac_temp') }}"
        fan: "{{ states('input_text.status_climate_dalnac_fan') }}"
        swing: "{{ states('input_text.status_climate_dalnac_swing') }}"
        light: "{{ false if is_state('switch.dalnac_dysplay', 'off') else true }}"
        preset: "{{ states('input_text.status_climate_dalnac_preset') }}"

